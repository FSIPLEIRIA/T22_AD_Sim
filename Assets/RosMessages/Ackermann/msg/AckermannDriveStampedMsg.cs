//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Ackermann
{
    [Serializable]
    public class AckermannDriveStampedMsg : Message
    {
        public const string k_RosMessageName = "ackermann_msgs/AckermannDriveStamped";
        public override string RosMessageName => k_RosMessageName;

        // # Time stamped drive command for robots with Ackermann steering.
        //   $Id$
        public HeaderMsg header;
        public AckermannDriveMsg drive;

        public AckermannDriveStampedMsg()
        {
            this.header = new HeaderMsg();
            this.drive = new AckermannDriveMsg();
        }

        public AckermannDriveStampedMsg(HeaderMsg header, AckermannDriveMsg drive)
        {
            this.header = header;
            this.drive = drive;
        }

        public static AckermannDriveStampedMsg Deserialize(MessageDeserializer deserializer) => new AckermannDriveStampedMsg(deserializer);

        private AckermannDriveStampedMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            this.drive = AckermannDriveMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.drive);
        }

        public override string ToString()
        {
            return "AckermannDriveStampedMsg: " +
            "\nheader: " + header.ToString() +
            "\ndrive: " + drive.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
